@model IEnumerable<HMSphere.MVC.ViewModels.AppointmentsViewModel>

@{
	ViewData["Title"] = "Appointments";
}

<style>
	.table td, .table th {
		text-align: center;
		vertical-align: middle;
	}

	.btn-view {
		background-color: #2a9fd9;
		color: white;
		border-radius: 20px;
		padding: 5px 15px;
	}
	.btn-view a{
		text-decoration:none;
		color:white;
	}

	.btn-view:hover {
		background-color: #17a2b8;
	}

	.bi {
		font-size: 25px;
		margin-left: 15px;
	}

	.position-relative {
		display: inline-block;
	}

	.dropdown-icon {
		position: absolute;
		right: 10px; /* Adjust as needed to position the icon within the select */
		top: 50%;
		transform: translateY(-50%);
		pointer-events: none; /* Allows clicks on the select */
		color: #999; /* Optional: change the color of the icon */
		font-size: 1rem; /* Adjust icon size */
		margin-right:15px;
	}

	.bi-search{
		font-size:20px;
	}

</style>

<div class="container mt-4">
	<div class="d-flex justify-content-between mb-4">
		<h2>My Appointments</h2>
	</div>

	<div class="row mb-3">
		<div class="col-md-3 position-relative">
			<select id="statusSearch" class="form-control" onchange="searchByStatus()">
				<option value="">All</option>
				<option value="Pending">Pending</option>
				<option value="Scheduled">Scheduled</option>
				<option value="Completed">Completed</option>
				<option value="Cancelled">Cancelled</option>
			</select>
			<i class="bi bi-caret-down dropdown-icon"></i>
		</div>
		<div class="col-md-3 d-flex">
			<input type="date" id="dateSearch" class="form-control" placeholder="Search by Date"
				   onchange="filterAppointments()">
		</div>
		@* <div class="col-md-3 d-flex">
			<button class="btn btn-primary" onclick="searchByDate()">
				Search
			</button>
			<i class="bi bi text-secondary ml-2"></i>
		</div> *@

	</div>

	<div class="table-responsive">
		<table class="table table-striped">
			<thead>
				<tr>
					<th>Date</th>
					<th>Status</th>
					<th>ReasonFor</th>
					<th>Clinic</th>
					<th>Time</th>
					<th>Patient Name</th>
					<th>Details</th>
				</tr>
			</thead>
			<tbody id="appointmentsTable">
				@foreach(var appointment in Model)
				{
					<tr>
						<td>@appointment.Date.ToString("MM/dd/yyyy")</td>
						<td>@appointment.Status</td>
						<td>@appointment.ReasonFor</td>
						<td>@appointment.Clinic</td>
						<td>@appointment.AppointmentTime</td>
						<td>@appointment.PatientName</td>
						<td>
							<form asp-controller="Doctor" asp-action="AppointmentDetails" asp-route-data="@appointment.Id" method="get">
								<input type="hidden" name="appointmentId" value="@appointment.Id" />
								<button type="submit" class="btn btn-view">View</button>
							</form>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<script>
	function searchByStatus() {
		var status = document.getElementById("statusSearch").value;
		console.log("Searching for status:", status);

		$.ajax({
			url: '/Doctor/SearchAppointmentByStatus',
			type: 'GET',
			data: { status: status },
			success: function (response) {
				console.log("Response:", response);
				updateTable(response);
			},
			error: function (xhr, status, error) {
				console.error("Error:", error);
			}
		});
	}

	function filterAppointments() {
		const status = document.getElementById("statusFilter").value;
		const selectedDate = document.getElementById("dateFilter").value;

		let endpoint = '/api/appointments/';
		if (status && selectedDate) {
			endpoint += `filter?status=${status}&date=${selectedDate}`;
		} else if (status) {
			endpoint += `filterByStatus?status=${status}`;
		} else if (selectedDate) {
			endpoint += `filterByDate?date=${selectedDate}`;
		}

		fetch(endpoint)
			.then(response => response.json())
			.then(data => {
				updateAppointmentsTable(data);
			})
			.catch(error => console.error('Error fetching appointments:', error));
	}

	function updateTable(appointments) {
		$('#appointmentsTable').empty();

		if (!appointments || appointments.length === 0) {
			$('#appointmentsTable').append(`<tr><td colspan="9">No patients found.</td></tr>`);
			return;
		}

		appointments.forEach(function (appointment) {
			var row =
				`<tr>
					<td>${appointment.date}</td>
					<td>${appointment.status}</td>
					<td>${appointment.reasonFor}</td>
					<td>${appointment.clinic}</td>
					<td>${appointment.date}</td>
					<td>${appointment.patientName}</td>
					<td>
						<form action="/Doctor/AppointmentDetails" method="get">
							<input type="hidden" name="appointmentId" value="${appointment.id}" />
							<button type="submit" class="btn btn-view">View</button>
						</form>
					</td>
				</tr>`;
			$('#appointmentsTable').append(row);
		});
	}
</script>
